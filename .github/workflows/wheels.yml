name: Build Wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: "pp* *i686 *-win32 *musllinux*"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
      CIBW_BEFORE_BUILD_LINUX: "bash {project}/ci/embree2.linux.bash"
      CIBW_BEFORE_TEST: pip install pytest
      CIBW_TEST_COMMAND: "pytest -v {project}/tests"
      CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path embree2\\bin --no-mangle tbb12.dll;embree2.dll -w {dest_dir} {wheel}"
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: "DYLD_LIBRARY_PATH=~/embree2/lib; delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.11'
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.13.0
    - name: Install Embree On Windows
      if: matrix.os == 'windows-latest'
      run: |
        ci/embree2.win.bat
    - name: Install Embree On Mac
      if: matrix.os == 'macos-latest'
      run: |
        zsh ci/embree2.mac.bash
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/
